
=pod

=head1 NAME

fib - A class for manipulating files

=head1 SYNOPSIS

 #include <stdio.h>
 #include "xas/rms/fib.h"

 int main(int argc, char **argv) {

     fib_t *temp = NULL;
     char *filename = "files.pod";

     if ((temp = fib_create(filename))) {

         fib_open(temp, O_RDONLY, 0);
         fib_close(temp);

         fib_destroy(temp);

     }

     return 0;

 }

=head1 DESCRIPTION

This is a class to perform basic file I/O. It uses standard Unix file I/O 
to perform its functions.

The files fib.c and fib.h define the class. 

=over 4

=item B<xas/rms/fib.h>

This defines the interface to the class. 

=item B<fib.c> 

This implements the interface.

=back

=head1 METHODS

=head2 I<fib_t *fib_create(char *filename, int retries, int timeout)>

This method initializes the class. 

=over 4

=item B<filename>

The name of the file to manipulate.

=item B<retries>

The number of retries to perform if the file is locked.

=item B<timeout>

The number of seconds to wait between retries.

=back

=head2 I<int fib_destroy(fib_t *self)>

This destroys the object. 

=over 4

=item B<self>

A pointer to a fib_t object.

=back

=head2 I<int fib_override(fib_t *self, item_list_t *items)>

This method allows you to override methods. 

=over 4

=item B<self>

A pointer to a fib_t object.

=item B<items>

An array of item_list_t types. The array is 0 terminated.

=back

=head2 I<int fib_compare(fib_t *this, fib_t *that)>

This method allows you to compare one fib_t object to another. 

=over 4

=item B<this>

A pointer to a fib_t object.

=item B<that>

A pointer to a fib_t object.

=back

=head2 I<char *fib_version(fib_t *self)>

This method returns the version of the library. The version number
follows the guidelines from L<semver.org|https://semver.org/>.

=over 4

=item B<self>

A pointer to the fib_t object.

=back

=head2 I<int fib_open(fib_t *self, int flags, mode_t mode)>

This method allows you to open the file. This is a wrapper around
L<open(2)>.

=over 4

=item B<self>

A pointer for a fib_t object.

=item B<flags>

The flags to pass to open().

=item B<mode>

The mode to pass to open().

=back

=head2 I<int fib_close(fib_t *self)>

This method allows you to close the file. This is a wrapper around
L<close(2)>.

=over 4

=item B<self>

A pointer for a fib_t object.

=back

=head2 I<int fib_exists(fib_t *self, int *exists)>

This method allows you to check and see if a files exists. This is a
wrapper around L<stat(2)>.

=over 4

=item B<self>

A pointer to a fib_t object.

=item B<exists>

A pointer to wither the file exists. This is a TRUE/FALSE value.

=back

=head2 I<int fib_stat(fib_t *self, struct stat *buffer)>

This method allows you to retrieve file information. This is a wrapper around 
L<stat(2)>.

=over 4

=item B<self>

A pointer to a fib_t object.

=item B<buffer>

A pointer to a I<struct stat> data structure.

=back

=head2 I<int fib_unlink(fib_t *self)>

This method allows you to unlink a file. This is a wrapper around 
L<unlink(2)>.

=over 4

=item B<self>

A pointer to a fib_t object.

=back

=head2 I<int fib_size(fib_t *self, off_t *size)>

This method allows you to retrieve the file size. This is a wrapper around 
L<stat(2)>.

=over 4

=item B<self>

A pointer to a fib_t object.

=item B<size>

A pointer to where to write the file size.

=back

=head1 MUTATORS

=head2 I<int fib_get_fd(fib_t *self, int *fd)>

This method returns the file descriptor.

=over 4

=item B<self>

A pointer to a fib_t object.

=item B<fd>

A pointer to store the file descriptor into.

=back

=head1 RETURNS

The method fib_create() returns a pointer to a fib_t object. All other 
methods return either OK on success or ERR on failure. The extended 
error description can be returned with object_get_error().

=head1 BUILDING

The following assumes a GNU/GCC build environment.

=over 4

=item make

Builds the module and provides an object archive.

=item make clean

Removes cruft from the directory.

=item make man

Builds the man page.

=item make shared

Builds the module and provides a shared library.

=back

=head1 SEE ALSO

=over 4

=item L<object(3)>

=back

=head1 AUTHOR

Kevin L. Esteb, E<lt>kevin@kesteb.usE<gt>

=head1 COPYRIGHT AND LICENSE

Copyright (c) 2023 by Kevin L. Esteb

Permission to use, copy, modify, and distribute this software and its
documentation for any purpose and without fee is hereby granted,
provided that this copyright notice appears in all copies. The
author makes no representations about the suitability of this software
for any purpose. It is provided "as is" without express or implied
warranty.

=cut

